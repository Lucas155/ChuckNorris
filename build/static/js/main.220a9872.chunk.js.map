{"version":3,"sources":["styles/GlobalStyle.ts","img/giphy.gif","pages/Home/style.ts","service/api.ts","pages/Home/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","HomeContainer","styled","div","api","axios","create","baseURL","Home","useState","categoriesJoke","setCategoriesJoke","categorySelected","setCategorySelected","searchJoke","setSearchJoke","isLoad","setIsLoad","resultSearch","setResultSearch","a","get","response","data","result","status","e","useEffect","then","className","map","joke","index","onClick","handleJokeByCategory","type","onChange","target","value","src","LoadGif","alt","icon_url","id","GlobalStyle","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"2LAEeA,cAAf,wgB,+BCFe,MAA0B,kCCE5BC,EAAgBC,IAAOC,IAAV,mV,QCIXC,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,gC,OCuFEC,EA7EQ,WAAO,IAAD,EACqBC,mBAAS,IAD9B,mBACjBC,EADiB,KACDC,EADC,OAEyBF,qBAFzB,mBAEjBG,EAFiB,KAECC,EAFD,OAGaJ,mBAAS,IAHtB,mBAGjBK,EAHiB,KAGLC,EAHK,OAIKN,oBAAS,GAJd,mBAIjBO,EAJiB,KAITC,EAJS,OAKiBR,mBAAkB,IALnC,mBAKjBS,EALiB,KAKHC,EALG,iDAgBzB,4BAAAC,EAAA,6DACIH,GAAU,GADd,SAE2Bb,EAAIiB,IAAJ,6BAA8BP,IAFzD,OAEUQ,EAFV,OAGIH,EAAgBG,EAASC,KAAKC,QACP,MAApBF,EAASG,QACRR,GAAU,GALlB,4CAhByB,kEAyBzB,WAAoCS,GAApC,eAAAN,EAAA,6DACIH,GAAU,GADd,SAE2Bb,EAAIiB,IAAJ,gCAAiCK,IAF5D,OAEUJ,EAFV,OAGIT,EAAoBS,EAASC,MACL,MAApBD,EAASG,QACTR,GAAU,GALlB,4CAzByB,sBAsCzB,OA9BAU,qBAAW,WACPvB,EAAIiB,IAAI,oBAAoBO,MACxB,SAAAN,GACIX,EAAkBW,EAASC,WAGpC,IAyBC,eAACtB,EAAD,WACI,4CAEA,qBAAK4B,UAAU,aAAf,SACI,6BACEnB,EAAeoB,KAAK,SAACC,EAAMC,GAAP,OAClB,oBAAgBC,QAAU,kBA7CjB,2CA6CuBC,CAAqBH,IAArD,SAA8DA,GAArDC,UAKjB,sBAAKH,UAAU,cAAf,UACA,2CACI,uBAAOM,KAAK,OAAOC,SAAW,SAAAV,GAAC,OAAIX,EAAcW,EAAEW,OAAOC,UAC1D,wBAAQH,KAAK,SAASF,QArDT,2CAqDb,2BAGJ,mDACA,qBAAKJ,UAAU,QAAf,SACMb,EAAS,qBAAKuB,IAAKC,EAASC,IAAI,SAAWvB,EAAaY,KAAK,SAAAN,GAAM,OACjE,gCACI,qBAAKe,IAAKf,EAAOkB,SAAUD,IAAKjB,EAAOc,QACvC,6BAAKd,EAAOc,UAFNd,EAAOmB,SAQzB,sBAAKd,UAAU,mBAAf,UACI,qBAAKU,IAAG,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAkB8B,SAAUD,IAAG,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAkB0B,QAC7D,oCAAK1B,QAAL,IAAKA,OAAL,EAAKA,EAAkB0B,eCrExBC,EATO,WACpB,OACE,qCACE,cAAC,EAAD,IACA,cAACK,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.220a9872.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        padding: 0;\r\n        margin: 0;\r\n        \r\n    }\r\n    body{\r\n        background: #A9A9A9;\r\n        font-family: 'Chango', cursive;\r\n    }\r\n\r\n    button{\r\n        width: 80px;\r\n        height: 35px;\r\n        background-color: white;\r\n        border-color: black;\r\n        margin-left: 10px;\r\n        color: black;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n    }\r\n    \r\n    input{\r\n        height: 31px;\r\n        width: 220px;\r\n        border-color: black;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/giphy.41854774.gif\";","import styled from 'styled-components';\r\n\r\nexport const HomeContainer = styled.div`\r\n    width: 80%;\r\n    margin: auto;\r\n\r\n    .categories{\r\n        display: flex;\r\n        margin:20px;\r\n    }\r\n\r\n    .input-group{\r\n        position: relative;\r\n        top: -275px;\r\n        left:35%;         \r\n    }\r\n\r\n    .joker{\r\n        display: block;\r\n    }\r\n\r\n    .img img{\r\n        width: 10px;\r\n    }\r\n\r\n`","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.chucknorris.io/'\r\n})\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react';\r\n\r\nimport LoadGif from '../../img/giphy.gif';\r\nimport Chuck from '../../img/CHUCKNORRIS.gif';\r\nimport { HomeContainer } from './style';\r\nimport api from '../../service/api';\r\n\r\ninterface IJoke{\r\n    id: string;\r\n    icon_url: string;\r\n    value: string;\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n    const [ categoriesJoke, setCategoriesJoke ] = useState([]);\r\n    const [ categorySelected, setCategorySelected ] = useState<IJoke>()\r\n    const [ searchJoke, setSearchJoke ] = useState('')\r\n    const [ isLoad, setIsLoad ] = useState(false)\r\n    const [ resultSearch, setResultSearch ] = useState<IJoke[]>([])\r\n\r\n\r\n    useEffect( () => {\r\n        api.get('jokes/categories').then(\r\n            response => {\r\n                setCategoriesJoke(response.data)\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    async function handleJokes(){\r\n        setIsLoad(true)\r\n        const response = await api.get(`jokes/search?query=${searchJoke}`)\r\n        setResultSearch(response.data.result)\r\n        if(response.status === 200 ){\r\n            setIsLoad(false)\r\n        } \r\n    }\r\n\r\n    async function handleJokeByCategory(e: string){\r\n        setIsLoad(true)\r\n        const response = await api.get(`jokes/random?category=${e}`)\r\n        setCategorySelected(response.data)\r\n        if( response.status === 200 ){ \r\n            setIsLoad(false)\r\n        } \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <HomeContainer>\r\n            <h2>Categories</h2>\r\n            \r\n            <div className=\"categories\">\r\n                <ul>\r\n                { categoriesJoke.map( (joke, index) => (\r\n                    <li key={index} onClick={ () => handleJokeByCategory(joke) }>{joke}</li>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n            <h2>Find Joke</h2>\r\n                <input type=\"text\" onChange={ e => setSearchJoke(e.target.value)} />\r\n                <button type=\"submit\" onClick={handleJokes}> Find joke</button>\r\n\r\n            </div>\r\n            <h1>Find results for:</h1>\r\n            <div className=\"joker\">\r\n                { isLoad ? <img src={LoadGif} alt=\"load\"/> : resultSearch.map( result => (\r\n                    <div key={result.id}>\r\n                        <img src={result.icon_url} alt={result.value}/>\r\n                        <h3>{result.value}</h3>\r\n                    </div>\r\n                )) }\r\n\r\n\r\n            </div>\r\n            <div className=\"group-categorias\">\r\n                <img src={categorySelected?.icon_url} alt={categorySelected?.value}/>\r\n                <h3>{categorySelected?.value}</h3>\r\n            </div>  \r\n            \r\n        \r\n        </HomeContainer>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport GlobalStyle from '../src/styles/GlobalStyle';\r\nimport Home from './pages/Home'\r\n\r\nconst src: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Home />\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default src;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}